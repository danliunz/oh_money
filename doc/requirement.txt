The document lists basic requirements for "OhMoney" project

=== Project Statement ===

stuff in New Zealand is not cheap ;), so I need a mobile-friendly web app to
help track my daily expense and give decent reports

=== Requirement Breakdown ===

* User sign in and sign up (with remember-me mechanism)

  (optional) try not to use existing gem like 'devise'

* Allows users to enter entries of daily expense

  * expense entry can be associated with multiple tags

    e.g.
    At 2016-03-09, "wine" => ["@countdown", "wedding anniversary"]
    At 2016-04-06, "chocolate cake" => ["@chocalate company", "birthday celebration", "@Te Aro"]

  * purchased items can form hierachy

    e.g.
    Item "wine" belongs to item "drink" which iteself represents an item of broader category
    Item "beef steak" belongs to item "meat" which in turns belongs to "food"

    One item can belongs to multiple items. "beaf steak" can also belong to item "unhealthy food"

  * A web UI to add/edit/delete items and their hierachical relationship

      To speed up manual data entry, prompt based on existing data
      UI must be mobile device friendly

      Provide predefined items(import data from trademe?)

  * A web UI to add/edit/delete expense entry with optional tags

      To speed up manual data entry, prompt based on existing data
      UI must be mobile device friendly

      Provide prefefined tags(import data from trademe?)

      (optinal) detect similar words (e.g. bike/bicycle)

  * A web UI to add/edit/delete expense entry tags

* Generate reports giving users insight of their expense history

  * View expense entries
    Can be filtered by tag(s)
    Can be filtered by date range
    Ordered by purchase date

  * Aggregate report of expense history
    History within certain date range
    History for specified entry tags or item category

  * View expense trend
    Group expense by day/week/month
    Show expense fluctuation over time

  * Report criteria can be saved to user profile for ease reaccess

  * Expense watcher

    User customizes criteria for expense alert, e.g.
    "if total expense last week exceeds average weekly expense by over"
    "30%, generates an alert and drops me an email"

    "Set my daily budget to $50, if average expense last week exceeds it,"
    "generates an alert and drops me an email"

    User can view prior alerts


